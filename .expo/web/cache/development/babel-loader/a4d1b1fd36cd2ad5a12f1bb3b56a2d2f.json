{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useNavigation } from '@react-navigation/core';\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { auth } from \"../firebase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar LoginScreen = function LoginScreen() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var navigation = useNavigation();\n  useEffect(function () {\n    var unsubscribe = auth.onAuthStateChanged(function (user) {\n      if (user) {\n        navigation.replace(\"Home\");\n      }\n    });\n    return unsubscribe;\n  }, []);\n\n  var handleSignUp = function handleSignUp() {\n    navigation.replace(\"Register\");\n  };\n\n  var handleLogin = function handleLogin() {\n    auth.signInWithEmailAndPassword(email, password).then(function (userCredentials) {\n      var user = userCredentials.user;\n      console.log('Logged in with:', user.email);\n    }).catch(function (error) {\n      return alert(error.message);\n    });\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    behavior: \"padding\",\n    children: [_jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(TextInput, {\n        placeholder: \"Email\",\n        value: email,\n        onChangeText: function onChangeText(text) {\n          return setEmail(text);\n        },\n        style: styles.input\n      }), _jsx(TextInput, {\n        placeholder: \"Password\",\n        value: password,\n        onChangeText: function onChangeText(text) {\n          return setPassword(text);\n        },\n        style: styles.input,\n        secureTextEntry: true\n      })]\n    }), _jsxs(View, {\n      style: styles.buttonContainer,\n      children: [_jsx(TouchableOpacity, {\n        onPress: handleSignUp,\n        style: [styles.button, styles.buttonOutline],\n        children: _jsx(Text, {\n          style: styles.buttonOutlineText,\n          children: \"Register\"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: handleLogin,\n        style: styles.button,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Login\"\n        })\n      })]\n    })]\n  });\n};\n\nexport default LoginScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  inputContainer: {\n    width: '80%'\n  },\n  input: {\n    backgroundColor: 'white',\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    borderRadius: 10,\n    marginTop: 5\n  },\n  buttonContainer: {\n    width: '60%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 20,\n    flexDirection: 'row'\n  },\n  button: {\n    backgroundColor: '#0782F9',\n    width: '50%',\n    padding: 15,\n    marginHorizontal: 10,\n    borderRadius: 10,\n    alignItems: 'center'\n  },\n  buttonOutline: {\n    backgroundColor: 'white',\n    marginTop: 5,\n    borderColor: '#0782F9',\n    borderWidth: 2\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: '600',\n    fontSize: 14\n  },\n  buttonOutlineText: {\n    color: '#0782F9',\n    fontWeight: '600',\n    fontSize: 14\n  }\n});","map":{"version":3,"names":["useNavigation","React","useEffect","useState","auth","LoginScreen","email","setEmail","password","setPassword","navigation","unsubscribe","onAuthStateChanged","user","replace","handleSignUp","handleLogin","signInWithEmailAndPassword","then","userCredentials","console","log","catch","error","alert","message","styles","container","inputContainer","text","input","buttonContainer","button","buttonOutline","buttonOutlineText","buttonText","StyleSheet","create","flex","justifyContent","alignItems","width","backgroundColor","paddingHorizontal","paddingVertical","borderRadius","marginTop","flexDirection","padding","marginHorizontal","borderColor","borderWidth","color","fontWeight","fontSize"],"sources":["/home/james/Projects/rideshare-buddy/screens/LoginScreen.js"],"sourcesContent":["import { useNavigation } from '@react-navigation/core';\nimport React, { useEffect, useState } from 'react'\nimport { StyleSheet, Text, View, KeyboardAvoidingView, TextInput, TouchableOpacity } from 'react-native'\nimport { auth } from '../firebase';\n\nconst LoginScreen = () => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const navigation = useNavigation()\n\n    useEffect(() => {\n        const unsubscribe = auth.onAuthStateChanged(user => {\n            if (user) {\n                navigation.replace(\"Home\")\n            }\n        })\n\n        return unsubscribe\n    }, [])\n\n    const handleSignUp = () => {\n        navigation.replace(\"Register\")\n    }\n\n    const handleLogin = () => {\n        auth\n            .signInWithEmailAndPassword(email, password)\n            .then(userCredentials => {\n                const user = userCredentials.user;\n                console.log('Logged in with:', user.email);\n            })\n            .catch(error => alert(error.message))\n    }\n\n    return (\n        <View\n            style={styles.container}\n            behavior=\"padding\"\n        >\n            <View style={styles.inputContainer}>\n                <TextInput\n                    placeholder=\"Email\"\n                    value={email}\n                    onChangeText={text => setEmail(text)}\n                    style={styles.input}\n                />\n                <TextInput\n                    placeholder=\"Password\"\n                    value={password}\n                    onChangeText={text => setPassword(text)}\n                    style={styles.input}\n                    secureTextEntry\n                />\n            </View>\n\n            <View style={styles.buttonContainer}>\n                <TouchableOpacity\n                    onPress={handleSignUp}\n                    style={[styles.button, styles.buttonOutline]}\n                >\n                    <Text style={styles.buttonOutlineText}>Register</Text>\n                </TouchableOpacity>\n                <TouchableOpacity\n                    onPress={handleLogin}\n                    style={styles.button}\n                >\n                    <Text style={styles.buttonText}>Login</Text>\n                </TouchableOpacity>\n            </View>\n        </View>\n    )\n}\n\nexport default LoginScreen\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    inputContainer: {\n        width: '80%',\n    },\n    input: {\n        backgroundColor: 'white',\n        paddingHorizontal: 15,\n        paddingVertical: 10,\n        borderRadius: 10,\n        marginTop: 5,\n    },\n    buttonContainer: {\n        width: '60%',\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginTop: 20,\n        flexDirection: 'row',\n    },\n    button: {\n        backgroundColor: '#0782F9',\n        width: '50%',\n        padding: 15,\n        marginHorizontal: 10,\n        borderRadius: 10,\n        alignItems: 'center',\n    },\n    buttonOutline: {\n        backgroundColor: 'white',\n        marginTop: 5,\n        borderColor: '#0782F9',\n        borderWidth: 2,\n    },\n    buttonText: {\n        color: 'white',\n        fontWeight: '600',\n        fontSize: 14,\n    },\n    buttonOutlineText: {\n        color: '#0782F9',\n        fontWeight: '600',\n        fontSize: 14,\n    },\n})"],"mappings":"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"},"metadata":{},"sourceType":"module"}